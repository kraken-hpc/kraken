version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # make sure the "kitcken sink" builds
    docker:
      - image: circleci/golang:1.15
    steps:
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - v1-pkg-cache

      - checkout
      - run:
          name: Create kitchen sink config
          command: bash config/generate-kitchensink.sh .
      - run:
          name: Build kraken-build
          command: go build kraken-build.go
      - run:
          name: Build kitchen sink recipe
          command: ./kraken-build -force -v -config config/kitchensink.yaml
      - save_cache: # store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - "/go/pkg"

  test:
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.15

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - v1-pkg-cache

      # Normally, this step would be in a custom primary image;
      # we've added it here for the sake of explanation.
      - run: go get github.com/jstemmer/go-junit-report

      - run:
          name: Run core unit tests
          # store the results of our tests in the $TEST_RESULTS directory
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            cd core/tests
            go test -v | tee ${TEST_RESULTS}/go-test.out

      - save_cache: # store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - "/go/pkg"

      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - build