// Code generated by protoc-gen-go. DO NOT EDIT.
// source: API.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServiceControl_Command int32

const (
	ServiceControl_STOP   ServiceControl_Command = 0
	ServiceControl_UPDATE ServiceControl_Command = 1
	ServiceControl_INIT   ServiceControl_Command = 2
)

var ServiceControl_Command_name = map[int32]string{
	0: "STOP",
	1: "UPDATE",
	2: "INIT",
}
var ServiceControl_Command_value = map[string]int32{
	"STOP":   0,
	"UPDATE": 1,
	"INIT":   2,
}

func (x ServiceControl_Command) String() string {
	return proto.EnumName(ServiceControl_Command_name, int32(x))
}
func (ServiceControl_Command) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{3, 0}
}

type MutationControl_Type int32

const (
	MutationControl_MUTATE    MutationControl_Type = 0
	MutationControl_INTERRUPT MutationControl_Type = 1
)

var MutationControl_Type_name = map[int32]string{
	0: "MUTATE",
	1: "INTERRUPT",
}
var MutationControl_Type_value = map[string]int32{
	"MUTATE":    0,
	"INTERRUPT": 1,
}

func (x MutationControl_Type) String() string {
	return proto.EnumName(MutationControl_Type_name, int32(x))
}
func (MutationControl_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{4, 0}
}

type Query struct {
	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*Query_Node
	//	*Query_Text
	//	*Query_MutationNodeList
	//	*Query_MutationEdgeList
	//	*Query_MutationPath
	Payload              isQuery_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{0}
}
func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (dst *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(dst, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type isQuery_Payload interface {
	isQuery_Payload()
}

type Query_Node struct {
	Node *Node `protobuf:"bytes,2,opt,name=node,proto3,oneof"`
}

type Query_Text struct {
	Text string `protobuf:"bytes,3,opt,name=text,proto3,oneof"`
}

type Query_MutationNodeList struct {
	MutationNodeList *MutationNodeList `protobuf:"bytes,4,opt,name=mutationNodeList,proto3,oneof"`
}

type Query_MutationEdgeList struct {
	MutationEdgeList *MutationEdgeList `protobuf:"bytes,5,opt,name=mutationEdgeList,proto3,oneof"`
}

type Query_MutationPath struct {
	MutationPath *MutationPath `protobuf:"bytes,6,opt,name=mutationPath,proto3,oneof"`
}

func (*Query_Node) isQuery_Payload() {}

func (*Query_Text) isQuery_Payload() {}

func (*Query_MutationNodeList) isQuery_Payload() {}

func (*Query_MutationEdgeList) isQuery_Payload() {}

func (*Query_MutationPath) isQuery_Payload() {}

func (m *Query) GetPayload() isQuery_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Query) GetNode() *Node {
	if x, ok := m.GetPayload().(*Query_Node); ok {
		return x.Node
	}
	return nil
}

func (m *Query) GetText() string {
	if x, ok := m.GetPayload().(*Query_Text); ok {
		return x.Text
	}
	return ""
}

func (m *Query) GetMutationNodeList() *MutationNodeList {
	if x, ok := m.GetPayload().(*Query_MutationNodeList); ok {
		return x.MutationNodeList
	}
	return nil
}

func (m *Query) GetMutationEdgeList() *MutationEdgeList {
	if x, ok := m.GetPayload().(*Query_MutationEdgeList); ok {
		return x.MutationEdgeList
	}
	return nil
}

func (m *Query) GetMutationPath() *MutationPath {
	if x, ok := m.GetPayload().(*Query_MutationPath); ok {
		return x.MutationPath
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Query) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Query_OneofMarshaler, _Query_OneofUnmarshaler, _Query_OneofSizer, []interface{}{
		(*Query_Node)(nil),
		(*Query_Text)(nil),
		(*Query_MutationNodeList)(nil),
		(*Query_MutationEdgeList)(nil),
		(*Query_MutationPath)(nil),
	}
}

func _Query_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Query)
	// payload
	switch x := m.Payload.(type) {
	case *Query_Node:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Node); err != nil {
			return err
		}
	case *Query_Text:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Text)
	case *Query_MutationNodeList:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MutationNodeList); err != nil {
			return err
		}
	case *Query_MutationEdgeList:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MutationEdgeList); err != nil {
			return err
		}
	case *Query_MutationPath:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MutationPath); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Query.Payload has unexpected type %T", x)
	}
	return nil
}

func _Query_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Query)
	switch tag {
	case 2: // payload.node
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Node)
		err := b.DecodeMessage(msg)
		m.Payload = &Query_Node{msg}
		return true, err
	case 3: // payload.text
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Payload = &Query_Text{x}
		return true, err
	case 4: // payload.mutationNodeList
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutationNodeList)
		err := b.DecodeMessage(msg)
		m.Payload = &Query_MutationNodeList{msg}
		return true, err
	case 5: // payload.mutationEdgeList
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutationEdgeList)
		err := b.DecodeMessage(msg)
		m.Payload = &Query_MutationEdgeList{msg}
		return true, err
	case 6: // payload.mutationPath
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MutationPath)
		err := b.DecodeMessage(msg)
		m.Payload = &Query_MutationPath{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Query_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Query)
	// payload
	switch x := m.Payload.(type) {
	case *Query_Node:
		s := proto.Size(x.Node)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Query_Text:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Text)))
		n += len(x.Text)
	case *Query_MutationNodeList:
		s := proto.Size(x.MutationNodeList)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Query_MutationEdgeList:
		s := proto.Size(x.MutationEdgeList)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Query_MutationPath:
		s := proto.Size(x.MutationPath)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type QueryMulti struct {
	Queries              []*Query `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryMulti) Reset()         { *m = QueryMulti{} }
func (m *QueryMulti) String() string { return proto.CompactTextString(m) }
func (*QueryMulti) ProtoMessage()    {}
func (*QueryMulti) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{1}
}
func (m *QueryMulti) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryMulti.Unmarshal(m, b)
}
func (m *QueryMulti) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryMulti.Marshal(b, m, deterministic)
}
func (dst *QueryMulti) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryMulti.Merge(dst, src)
}
func (m *QueryMulti) XXX_Size() int {
	return xxx_messageInfo_QueryMulti.Size(m)
}
func (m *QueryMulti) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryMulti.DiscardUnknown(m)
}

var xxx_messageInfo_QueryMulti proto.InternalMessageInfo

func (m *QueryMulti) GetQueries() []*Query {
	if m != nil {
		return m.Queries
	}
	return nil
}

type ServiceInitRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Module               string   `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceInitRequest) Reset()         { *m = ServiceInitRequest{} }
func (m *ServiceInitRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceInitRequest) ProtoMessage()    {}
func (*ServiceInitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{2}
}
func (m *ServiceInitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceInitRequest.Unmarshal(m, b)
}
func (m *ServiceInitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceInitRequest.Marshal(b, m, deterministic)
}
func (dst *ServiceInitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceInitRequest.Merge(dst, src)
}
func (m *ServiceInitRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceInitRequest.Size(m)
}
func (m *ServiceInitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceInitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceInitRequest proto.InternalMessageInfo

func (m *ServiceInitRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServiceInitRequest) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

type ServiceControl struct {
	Command              ServiceControl_Command `protobuf:"varint,1,opt,name=command,proto3,enum=proto.ServiceControl_Command" json:"command,omitempty"`
	Config               *any.Any               `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ServiceControl) Reset()         { *m = ServiceControl{} }
func (m *ServiceControl) String() string { return proto.CompactTextString(m) }
func (*ServiceControl) ProtoMessage()    {}
func (*ServiceControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{3}
}
func (m *ServiceControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceControl.Unmarshal(m, b)
}
func (m *ServiceControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceControl.Marshal(b, m, deterministic)
}
func (dst *ServiceControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceControl.Merge(dst, src)
}
func (m *ServiceControl) XXX_Size() int {
	return xxx_messageInfo_ServiceControl.Size(m)
}
func (m *ServiceControl) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceControl.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceControl proto.InternalMessageInfo

func (m *ServiceControl) GetCommand() ServiceControl_Command {
	if m != nil {
		return m.Command
	}
	return ServiceControl_STOP
}

func (m *ServiceControl) GetConfig() *any.Any {
	if m != nil {
		return m.Config
	}
	return nil
}

type MutationControl struct {
	Module               string               `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Id                   string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Type                 MutationControl_Type `protobuf:"varint,3,opt,name=type,proto3,enum=proto.MutationControl_Type" json:"type,omitempty"`
	Cfg                  *Node                `protobuf:"bytes,4,opt,name=cfg,proto3" json:"cfg,omitempty"`
	Dsc                  *Node                `protobuf:"bytes,5,opt,name=dsc,proto3" json:"dsc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MutationControl) Reset()         { *m = MutationControl{} }
func (m *MutationControl) String() string { return proto.CompactTextString(m) }
func (*MutationControl) ProtoMessage()    {}
func (*MutationControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{4}
}
func (m *MutationControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationControl.Unmarshal(m, b)
}
func (m *MutationControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationControl.Marshal(b, m, deterministic)
}
func (dst *MutationControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationControl.Merge(dst, src)
}
func (m *MutationControl) XXX_Size() int {
	return xxx_messageInfo_MutationControl.Size(m)
}
func (m *MutationControl) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationControl.DiscardUnknown(m)
}

var xxx_messageInfo_MutationControl proto.InternalMessageInfo

func (m *MutationControl) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

func (m *MutationControl) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MutationControl) GetType() MutationControl_Type {
	if m != nil {
		return m.Type
	}
	return MutationControl_MUTATE
}

func (m *MutationControl) GetCfg() *Node {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (m *MutationControl) GetDsc() *Node {
	if m != nil {
		return m.Dsc
	}
	return nil
}

type DiscoveryEvent struct {
	Module               string   `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ValueId              string   `protobuf:"bytes,3,opt,name=value_id,json=valueId,proto3" json:"value_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoveryEvent) Reset()         { *m = DiscoveryEvent{} }
func (m *DiscoveryEvent) String() string { return proto.CompactTextString(m) }
func (*DiscoveryEvent) ProtoMessage()    {}
func (*DiscoveryEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{5}
}
func (m *DiscoveryEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryEvent.Unmarshal(m, b)
}
func (m *DiscoveryEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryEvent.Marshal(b, m, deterministic)
}
func (dst *DiscoveryEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryEvent.Merge(dst, src)
}
func (m *DiscoveryEvent) XXX_Size() int {
	return xxx_messageInfo_DiscoveryEvent.Size(m)
}
func (m *DiscoveryEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryEvent proto.InternalMessageInfo

func (m *DiscoveryEvent) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

func (m *DiscoveryEvent) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *DiscoveryEvent) GetValueId() string {
	if m != nil {
		return m.ValueId
	}
	return ""
}

type MutationNodeList struct {
	MutationNodeList     []*MutationNode `protobuf:"bytes,1,rep,name=MutationNodeList,proto3" json:"MutationNodeList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MutationNodeList) Reset()         { *m = MutationNodeList{} }
func (m *MutationNodeList) String() string { return proto.CompactTextString(m) }
func (*MutationNodeList) ProtoMessage()    {}
func (*MutationNodeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{6}
}
func (m *MutationNodeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationNodeList.Unmarshal(m, b)
}
func (m *MutationNodeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationNodeList.Marshal(b, m, deterministic)
}
func (dst *MutationNodeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationNodeList.Merge(dst, src)
}
func (m *MutationNodeList) XXX_Size() int {
	return xxx_messageInfo_MutationNodeList.Size(m)
}
func (m *MutationNodeList) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationNodeList.DiscardUnknown(m)
}

var xxx_messageInfo_MutationNodeList proto.InternalMessageInfo

func (m *MutationNodeList) GetMutationNodeList() []*MutationNode {
	if m != nil {
		return m.MutationNodeList
	}
	return nil
}

type MutationEdgeList struct {
	MutationEdgeList     []*MutationEdge `protobuf:"bytes,1,rep,name=MutationEdgeList,proto3" json:"MutationEdgeList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MutationEdgeList) Reset()         { *m = MutationEdgeList{} }
func (m *MutationEdgeList) String() string { return proto.CompactTextString(m) }
func (*MutationEdgeList) ProtoMessage()    {}
func (*MutationEdgeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{7}
}
func (m *MutationEdgeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationEdgeList.Unmarshal(m, b)
}
func (m *MutationEdgeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationEdgeList.Marshal(b, m, deterministic)
}
func (dst *MutationEdgeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationEdgeList.Merge(dst, src)
}
func (m *MutationEdgeList) XXX_Size() int {
	return xxx_messageInfo_MutationEdgeList.Size(m)
}
func (m *MutationEdgeList) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationEdgeList.DiscardUnknown(m)
}

var xxx_messageInfo_MutationEdgeList proto.InternalMessageInfo

func (m *MutationEdgeList) GetMutationEdgeList() []*MutationEdge {
	if m != nil {
		return m.MutationEdgeList
	}
	return nil
}

type MutationPath struct {
	Cur                  int64           `protobuf:"varint,1,opt,name=cur,proto3" json:"cur,omitempty"`
	Chain                []*MutationEdge `protobuf:"bytes,2,rep,name=chain,proto3" json:"chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MutationPath) Reset()         { *m = MutationPath{} }
func (m *MutationPath) String() string { return proto.CompactTextString(m) }
func (*MutationPath) ProtoMessage()    {}
func (*MutationPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{8}
}
func (m *MutationPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationPath.Unmarshal(m, b)
}
func (m *MutationPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationPath.Marshal(b, m, deterministic)
}
func (dst *MutationPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationPath.Merge(dst, src)
}
func (m *MutationPath) XXX_Size() int {
	return xxx_messageInfo_MutationPath.Size(m)
}
func (m *MutationPath) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationPath.DiscardUnknown(m)
}

var xxx_messageInfo_MutationPath proto.InternalMessageInfo

func (m *MutationPath) GetCur() int64 {
	if m != nil {
		return m.Cur
	}
	return 0
}

func (m *MutationPath) GetChain() []*MutationEdge {
	if m != nil {
		return m.Chain
	}
	return nil
}

type MutationNode struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MutationNode) Reset()         { *m = MutationNode{} }
func (m *MutationNode) String() string { return proto.CompactTextString(m) }
func (*MutationNode) ProtoMessage()    {}
func (*MutationNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{9}
}
func (m *MutationNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationNode.Unmarshal(m, b)
}
func (m *MutationNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationNode.Marshal(b, m, deterministic)
}
func (dst *MutationNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationNode.Merge(dst, src)
}
func (m *MutationNode) XXX_Size() int {
	return xxx_messageInfo_MutationNode.Size(m)
}
func (m *MutationNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationNode.DiscardUnknown(m)
}

var xxx_messageInfo_MutationNode proto.InternalMessageInfo

func (m *MutationNode) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MutationNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MutationNode) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

type MutationEdge struct {
	From                 string     `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string     `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Id                   string     `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Color                *EdgeColor `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MutationEdge) Reset()         { *m = MutationEdge{} }
func (m *MutationEdge) String() string { return proto.CompactTextString(m) }
func (*MutationEdge) ProtoMessage()    {}
func (*MutationEdge) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{10}
}
func (m *MutationEdge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationEdge.Unmarshal(m, b)
}
func (m *MutationEdge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationEdge.Marshal(b, m, deterministic)
}
func (dst *MutationEdge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationEdge.Merge(dst, src)
}
func (m *MutationEdge) XXX_Size() int {
	return xxx_messageInfo_MutationEdge.Size(m)
}
func (m *MutationEdge) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationEdge.DiscardUnknown(m)
}

var xxx_messageInfo_MutationEdge proto.InternalMessageInfo

func (m *MutationEdge) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MutationEdge) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *MutationEdge) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MutationEdge) GetColor() *EdgeColor {
	if m != nil {
		return m.Color
	}
	return nil
}

// This is only nessessary for the json mutation edge color to output in the correct format for the dashboard
type EdgeColor struct {
	Color                string   `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Highlight            string   `protobuf:"bytes,2,opt,name=highlight,proto3" json:"highlight,omitempty"`
	Inherit              bool     `protobuf:"varint,3,opt,name=inherit,proto3" json:"inherit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdgeColor) Reset()         { *m = EdgeColor{} }
func (m *EdgeColor) String() string { return proto.CompactTextString(m) }
func (*EdgeColor) ProtoMessage()    {}
func (*EdgeColor) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{11}
}
func (m *EdgeColor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeColor.Unmarshal(m, b)
}
func (m *EdgeColor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeColor.Marshal(b, m, deterministic)
}
func (dst *EdgeColor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeColor.Merge(dst, src)
}
func (m *EdgeColor) XXX_Size() int {
	return xxx_messageInfo_EdgeColor.Size(m)
}
func (m *EdgeColor) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeColor.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeColor proto.InternalMessageInfo

func (m *EdgeColor) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *EdgeColor) GetHighlight() string {
	if m != nil {
		return m.Highlight
	}
	return ""
}

func (m *EdgeColor) GetInherit() bool {
	if m != nil {
		return m.Inherit
	}
	return false
}

type LogMessage struct {
	Origin               string   `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Level                uint32   `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogMessage) Reset()         { *m = LogMessage{} }
func (m *LogMessage) String() string { return proto.CompactTextString(m) }
func (*LogMessage) ProtoMessage()    {}
func (*LogMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_API_29aad8d6be19b05f, []int{12}
}
func (m *LogMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogMessage.Unmarshal(m, b)
}
func (m *LogMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogMessage.Marshal(b, m, deterministic)
}
func (dst *LogMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogMessage.Merge(dst, src)
}
func (m *LogMessage) XXX_Size() int {
	return xxx_messageInfo_LogMessage.Size(m)
}
func (m *LogMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LogMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LogMessage proto.InternalMessageInfo

func (m *LogMessage) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *LogMessage) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *LogMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Query)(nil), "proto.Query")
	proto.RegisterType((*QueryMulti)(nil), "proto.QueryMulti")
	proto.RegisterType((*ServiceInitRequest)(nil), "proto.ServiceInitRequest")
	proto.RegisterType((*ServiceControl)(nil), "proto.ServiceControl")
	proto.RegisterType((*MutationControl)(nil), "proto.MutationControl")
	proto.RegisterType((*DiscoveryEvent)(nil), "proto.DiscoveryEvent")
	proto.RegisterType((*MutationNodeList)(nil), "proto.MutationNodeList")
	proto.RegisterType((*MutationEdgeList)(nil), "proto.MutationEdgeList")
	proto.RegisterType((*MutationPath)(nil), "proto.MutationPath")
	proto.RegisterType((*MutationNode)(nil), "proto.MutationNode")
	proto.RegisterType((*MutationEdge)(nil), "proto.MutationEdge")
	proto.RegisterType((*EdgeColor)(nil), "proto.EdgeColor")
	proto.RegisterType((*LogMessage)(nil), "proto.LogMessage")
	proto.RegisterEnum("proto.ServiceControl_Command", ServiceControl_Command_name, ServiceControl_Command_value)
	proto.RegisterEnum("proto.MutationControl_Type", MutationControl_Type_name, MutationControl_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	// Query language
	// TODO: create API for bulk CRUD operations
	QueryCreate(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryRead(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryReadDsc(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryUpdate(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryUpdateDsc(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryDelete(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryReadAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error)
	QueryReadAllDsc(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error)
	QueryMutationNodes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error)
	QueryMutationEdges(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error)
	QueryNodeMutationNodes(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryNodeMutationEdges(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryNodeMutationPath(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryDeleteAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error)
	// Service management
	ServiceInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (API_ServiceInitClient, error)
	// Mutation/Discover management
	MutationInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (API_MutationInitClient, error)
	// Discovery management
	DiscoveryInit(ctx context.Context, opts ...grpc.CallOption) (API_DiscoveryInitClient, error)
	// Logging
	LoggerInit(ctx context.Context, opts ...grpc.CallOption) (API_LoggerInitClient, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) QueryCreate(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryRead(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryReadDsc(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryReadDsc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryUpdate(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryUpdateDsc(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryUpdateDsc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryDelete(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryReadAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error) {
	out := new(QueryMulti)
	err := c.cc.Invoke(ctx, "/proto.API/QueryReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryReadAllDsc(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error) {
	out := new(QueryMulti)
	err := c.cc.Invoke(ctx, "/proto.API/QueryReadAllDsc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryMutationNodes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryMutationNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryMutationEdges(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryMutationEdges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryNodeMutationNodes(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryNodeMutationNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryNodeMutationEdges(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryNodeMutationEdges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryNodeMutationPath(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.API/QueryNodeMutationPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) QueryDeleteAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error) {
	out := new(QueryMulti)
	err := c.cc.Invoke(ctx, "/proto.API/QueryDeleteAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ServiceInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (API_ServiceInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[0], "/proto.API/ServiceInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIServiceInitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type API_ServiceInitClient interface {
	Recv() (*ServiceControl, error)
	grpc.ClientStream
}

type aPIServiceInitClient struct {
	grpc.ClientStream
}

func (x *aPIServiceInitClient) Recv() (*ServiceControl, error) {
	m := new(ServiceControl)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) MutationInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (API_MutationInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[1], "/proto.API/MutationInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIMutationInitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type API_MutationInitClient interface {
	Recv() (*MutationControl, error)
	grpc.ClientStream
}

type aPIMutationInitClient struct {
	grpc.ClientStream
}

func (x *aPIMutationInitClient) Recv() (*MutationControl, error) {
	m := new(MutationControl)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) DiscoveryInit(ctx context.Context, opts ...grpc.CallOption) (API_DiscoveryInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[2], "/proto.API/DiscoveryInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIDiscoveryInitClient{stream}
	return x, nil
}

type API_DiscoveryInitClient interface {
	Send(*DiscoveryEvent) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type aPIDiscoveryInitClient struct {
	grpc.ClientStream
}

func (x *aPIDiscoveryInitClient) Send(m *DiscoveryEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPIDiscoveryInitClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) LoggerInit(ctx context.Context, opts ...grpc.CallOption) (API_LoggerInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[3], "/proto.API/LoggerInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPILoggerInitClient{stream}
	return x, nil
}

type API_LoggerInitClient interface {
	Send(*LogMessage) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type aPILoggerInitClient struct {
	grpc.ClientStream
}

func (x *aPILoggerInitClient) Send(m *LogMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPILoggerInitClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	// Query language
	// TODO: create API for bulk CRUD operations
	QueryCreate(context.Context, *Query) (*Query, error)
	QueryRead(context.Context, *Query) (*Query, error)
	QueryReadDsc(context.Context, *Query) (*Query, error)
	QueryUpdate(context.Context, *Query) (*Query, error)
	QueryUpdateDsc(context.Context, *Query) (*Query, error)
	QueryDelete(context.Context, *Query) (*Query, error)
	QueryReadAll(context.Context, *empty.Empty) (*QueryMulti, error)
	QueryReadAllDsc(context.Context, *empty.Empty) (*QueryMulti, error)
	QueryMutationNodes(context.Context, *empty.Empty) (*Query, error)
	QueryMutationEdges(context.Context, *empty.Empty) (*Query, error)
	QueryNodeMutationNodes(context.Context, *Query) (*Query, error)
	QueryNodeMutationEdges(context.Context, *Query) (*Query, error)
	QueryNodeMutationPath(context.Context, *Query) (*Query, error)
	QueryDeleteAll(context.Context, *empty.Empty) (*QueryMulti, error)
	// Service management
	ServiceInit(*ServiceInitRequest, API_ServiceInitServer) error
	// Mutation/Discover management
	MutationInit(*ServiceInitRequest, API_MutationInitServer) error
	// Discovery management
	DiscoveryInit(API_DiscoveryInitServer) error
	// Logging
	LoggerInit(API_LoggerInitServer) error
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_QueryCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryCreate(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryRead(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryReadDsc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryReadDsc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryReadDsc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryReadDsc(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryUpdate(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryUpdateDsc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryUpdateDsc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryUpdateDsc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryUpdateDsc(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryDelete(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryReadAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryReadAllDsc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryReadAllDsc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryReadAllDsc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryReadAllDsc(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryMutationNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryMutationNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryMutationNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryMutationNodes(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryMutationEdges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryMutationEdges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryMutationEdges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryMutationEdges(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryNodeMutationNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryNodeMutationNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryNodeMutationNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryNodeMutationNodes(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryNodeMutationEdges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryNodeMutationEdges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryNodeMutationEdges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryNodeMutationEdges(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryNodeMutationPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryNodeMutationPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryNodeMutationPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryNodeMutationPath(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_QueryDeleteAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).QueryDeleteAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.API/QueryDeleteAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).QueryDeleteAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ServiceInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServiceInitRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServer).ServiceInit(m, &aPIServiceInitServer{stream})
}

type API_ServiceInitServer interface {
	Send(*ServiceControl) error
	grpc.ServerStream
}

type aPIServiceInitServer struct {
	grpc.ServerStream
}

func (x *aPIServiceInitServer) Send(m *ServiceControl) error {
	return x.ServerStream.SendMsg(m)
}

func _API_MutationInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServiceInitRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServer).MutationInit(m, &aPIMutationInitServer{stream})
}

type API_MutationInitServer interface {
	Send(*MutationControl) error
	grpc.ServerStream
}

type aPIMutationInitServer struct {
	grpc.ServerStream
}

func (x *aPIMutationInitServer) Send(m *MutationControl) error {
	return x.ServerStream.SendMsg(m)
}

func _API_DiscoveryInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServer).DiscoveryInit(&aPIDiscoveryInitServer{stream})
}

type API_DiscoveryInitServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*DiscoveryEvent, error)
	grpc.ServerStream
}

type aPIDiscoveryInitServer struct {
	grpc.ServerStream
}

func (x *aPIDiscoveryInitServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPIDiscoveryInitServer) Recv() (*DiscoveryEvent, error) {
	m := new(DiscoveryEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _API_LoggerInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServer).LoggerInit(&aPILoggerInitServer{stream})
}

type API_LoggerInitServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*LogMessage, error)
	grpc.ServerStream
}

type aPILoggerInitServer struct {
	grpc.ServerStream
}

func (x *aPILoggerInitServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPILoggerInitServer) Recv() (*LogMessage, error) {
	m := new(LogMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryCreate",
			Handler:    _API_QueryCreate_Handler,
		},
		{
			MethodName: "QueryRead",
			Handler:    _API_QueryRead_Handler,
		},
		{
			MethodName: "QueryReadDsc",
			Handler:    _API_QueryReadDsc_Handler,
		},
		{
			MethodName: "QueryUpdate",
			Handler:    _API_QueryUpdate_Handler,
		},
		{
			MethodName: "QueryUpdateDsc",
			Handler:    _API_QueryUpdateDsc_Handler,
		},
		{
			MethodName: "QueryDelete",
			Handler:    _API_QueryDelete_Handler,
		},
		{
			MethodName: "QueryReadAll",
			Handler:    _API_QueryReadAll_Handler,
		},
		{
			MethodName: "QueryReadAllDsc",
			Handler:    _API_QueryReadAllDsc_Handler,
		},
		{
			MethodName: "QueryMutationNodes",
			Handler:    _API_QueryMutationNodes_Handler,
		},
		{
			MethodName: "QueryMutationEdges",
			Handler:    _API_QueryMutationEdges_Handler,
		},
		{
			MethodName: "QueryNodeMutationNodes",
			Handler:    _API_QueryNodeMutationNodes_Handler,
		},
		{
			MethodName: "QueryNodeMutationEdges",
			Handler:    _API_QueryNodeMutationEdges_Handler,
		},
		{
			MethodName: "QueryNodeMutationPath",
			Handler:    _API_QueryNodeMutationPath_Handler,
		},
		{
			MethodName: "QueryDeleteAll",
			Handler:    _API_QueryDeleteAll_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ServiceInit",
			Handler:       _API_ServiceInit_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MutationInit",
			Handler:       _API_MutationInit_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DiscoveryInit",
			Handler:       _API_DiscoveryInit_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "LoggerInit",
			Handler:       _API_LoggerInit_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "API.proto",
}

func init() { proto.RegisterFile("API.proto", fileDescriptor_API_29aad8d6be19b05f) }

var fileDescriptor_API_29aad8d6be19b05f = []byte{
	// 946 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x4b, 0x6f, 0xdb, 0x46,
	0x10, 0x26, 0xf5, 0xb4, 0x46, 0xb6, 0xc2, 0x6e, 0x1c, 0x57, 0x56, 0x1a, 0xc0, 0xe1, 0x21, 0xb0,
	0xd1, 0x40, 0x2e, 0xd4, 0x17, 0x8a, 0xa4, 0x0d, 0x14, 0x59, 0x80, 0xd5, 0xda, 0xae, 0xba, 0x96,
	0x0e, 0x3d, 0x15, 0x34, 0xb9, 0xa6, 0xb6, 0xa0, 0xb8, 0x0a, 0xb9, 0x14, 0xaa, 0x63, 0xff, 0x4a,
	0x0f, 0xfd, 0x33, 0xfd, 0x53, 0xc5, 0x3e, 0x28, 0x51, 0xef, 0xe4, 0xc4, 0x9d, 0xd7, 0x37, 0x33,
	0xbb, 0x1f, 0x67, 0xa0, 0xd2, 0xee, 0xf7, 0x9a, 0x93, 0x88, 0x71, 0x86, 0x8a, 0xf2, 0xd3, 0x80,
	0x3b, 0xe6, 0x11, 0xa5, 0x6a, 0x9c, 0xfa, 0x8c, 0xf9, 0x01, 0xb9, 0x94, 0xd2, 0x43, 0xf2, 0x78,
	0xe9, 0x84, 0x33, 0x6d, 0x7a, 0xbe, 0x6a, 0xea, 0x8e, 0x27, 0x5c, 0x1b, 0xed, 0x7f, 0x73, 0x50,
	0xfc, 0x2d, 0x21, 0xd1, 0x0c, 0x59, 0x90, 0x1f, 0xe2, 0x9b, 0xba, 0x79, 0x66, 0x9e, 0x57, 0xb0,
	0x38, 0xa2, 0x97, 0x50, 0x08, 0x99, 0x47, 0xea, 0xb9, 0x33, 0xf3, 0xbc, 0xda, 0xaa, 0xaa, 0x88,
	0xa6, 0x48, 0x7a, 0x6d, 0x60, 0x69, 0x42, 0xc7, 0x50, 0xe0, 0xe4, 0x2f, 0x5e, 0xcf, 0x8b, 0x28,
	0xa1, 0x15, 0x12, 0xea, 0x82, 0x35, 0x4e, 0xb8, 0xc3, 0x29, 0x0b, 0x85, 0xf7, 0x0d, 0x8d, 0x79,
	0xbd, 0x20, 0x41, 0x3e, 0xd7, 0x20, 0xb7, 0x2b, 0xe6, 0x6b, 0x03, 0xaf, 0x85, 0x64, 0x61, 0xba,
	0x9e, 0xaf, 0x60, 0x8a, 0x1b, 0x61, 0x52, 0x73, 0x16, 0x26, 0xd5, 0xa1, 0x1f, 0xe0, 0x30, 0xd5,
	0xf5, 0x1d, 0x3e, 0xaa, 0x97, 0x24, 0xc4, 0xd3, 0x15, 0x08, 0x61, 0xba, 0x36, 0xf0, 0x92, 0xeb,
	0xfb, 0x0a, 0x94, 0x27, 0xce, 0x2c, 0x60, 0x8e, 0x67, 0x7f, 0x03, 0x20, 0xef, 0xe9, 0x36, 0x09,
	0x38, 0x45, 0xaf, 0xa0, 0xfc, 0x21, 0x21, 0x11, 0x25, 0x71, 0xdd, 0x3c, 0xcb, 0x9f, 0x57, 0x5b,
	0x87, 0x1a, 0x4e, 0xfa, 0xe0, 0xd4, 0x68, 0xbf, 0x05, 0x74, 0x4f, 0xa2, 0x29, 0x75, 0x49, 0x2f,
	0xa4, 0x1c, 0x93, 0x0f, 0x09, 0x89, 0x39, 0xaa, 0x41, 0x8e, 0x7a, 0xfa, 0xa6, 0x73, 0xd4, 0x43,
	0x27, 0x50, 0x1a, 0x33, 0x2f, 0x09, 0xd4, 0x55, 0x57, 0xb0, 0x96, 0xec, 0x7f, 0x4c, 0xa8, 0xe9,
	0xf0, 0x0e, 0x0b, 0x79, 0xc4, 0x02, 0xf4, 0x3d, 0x94, 0x5d, 0x36, 0x1e, 0x3b, 0xa1, 0x8a, 0xaf,
	0xb5, 0x5e, 0xe8, 0xc4, 0xcb, 0x7e, 0xcd, 0x8e, 0x72, 0xc2, 0xa9, 0x37, 0x7a, 0x0d, 0x25, 0x97,
	0x85, 0x8f, 0xd4, 0xd7, 0xcf, 0x79, 0xdc, 0x54, 0xb4, 0x68, 0xa6, 0xb4, 0x68, 0xb6, 0xc3, 0x19,
	0xd6, 0x3e, 0xf6, 0x05, 0x94, 0x35, 0x02, 0x3a, 0x80, 0xc2, 0xfd, 0xe0, 0xd7, 0xbe, 0x65, 0x20,
	0x80, 0xd2, 0xb0, 0x7f, 0xd5, 0x1e, 0x74, 0x2d, 0x53, 0x68, 0x7b, 0x77, 0xbd, 0x81, 0x95, 0xb3,
	0xff, 0x33, 0xe1, 0x49, 0x7a, 0x89, 0x69, 0x95, 0x8b, 0x86, 0xcc, 0x6c, 0x43, 0xba, 0xf1, 0xdc,
	0xbc, 0xf1, 0x4b, 0x28, 0xf0, 0xd9, 0x84, 0x48, 0xfa, 0xd4, 0x5a, 0xcf, 0x57, 0x9e, 0x24, 0xed,
	0x65, 0x30, 0x9b, 0x10, 0x2c, 0x1d, 0xd1, 0x0b, 0xc8, 0xbb, 0x8f, 0xbe, 0x26, 0x53, 0x96, 0x91,
	0x58, 0xe8, 0x85, 0xd9, 0x8b, 0x5d, 0x4d, 0x92, 0x65, 0xb3, 0x17, 0xbb, 0xf6, 0x4b, 0x28, 0x08,
	0x2c, 0xd1, 0xc8, 0xed, 0x70, 0x20, 0x1a, 0x31, 0xd0, 0x11, 0x54, 0x7a, 0x77, 0x83, 0x2e, 0xc6,
	0xc3, 0xfe, 0xc0, 0x32, 0xed, 0x21, 0xd4, 0xae, 0x68, 0xec, 0xb2, 0x29, 0x89, 0x66, 0xdd, 0x29,
	0x09, 0xf9, 0xd6, 0x5e, 0x2c, 0xc8, 0x27, 0x51, 0xa0, 0x9b, 0x11, 0x47, 0x74, 0x0a, 0x07, 0x53,
	0x27, 0x48, 0xc8, 0x1f, 0xd4, 0x53, 0x3f, 0x04, 0x2e, 0x4b, 0xb9, 0xe7, 0xd9, 0xf7, 0x60, 0xad,
	0x52, 0x1e, 0xbd, 0x5b, 0xd7, 0x69, 0x32, 0x3d, 0xdd, 0xf0, 0x97, 0xe0, 0x35, 0xe7, 0x2c, 0xe8,
	0x9c, 0xec, 0xef, 0xd6, 0x75, 0x5b, 0x40, 0x85, 0x19, 0xaf, 0x39, 0xdb, 0xbf, 0xc0, 0x61, 0xf6,
	0x97, 0x10, 0x6d, 0xba, 0x49, 0x24, 0x7b, 0xcf, 0x63, 0x71, 0x44, 0x17, 0x50, 0x74, 0x47, 0x0e,
	0x0d, 0xeb, 0xb9, 0xed, 0xb8, 0xca, 0xc3, 0xfe, 0x79, 0x01, 0x76, 0xa7, 0xc6, 0x45, 0x31, 0x70,
	0x1e, 0x48, 0xa0, 0xaf, 0x52, 0x09, 0x6b, 0xac, 0x38, 0x86, 0xa2, 0xcb, 0x02, 0x16, 0xe9, 0x4b,
	0x54, 0x82, 0xfd, 0xe7, 0x02, 0x4b, 0xa4, 0x40, 0x08, 0x0a, 0x8f, 0x11, 0x1b, 0x6b, 0x28, 0x79,
	0x16, 0x48, 0x9c, 0xa5, 0x48, 0x9c, 0x69, 0xe4, 0xfc, 0x1c, 0xf9, 0x55, 0x8a, 0xac, 0x08, 0x64,
	0xe9, 0xd2, 0x05, 0x5e, 0x47, 0xe8, 0xd3, 0x5c, 0xbf, 0x43, 0x65, 0xae, 0x5b, 0x94, 0x63, 0x66,
	0xca, 0x41, 0x5f, 0x40, 0x65, 0x44, 0xfd, 0x51, 0x40, 0xfd, 0x11, 0xd7, 0x19, 0x17, 0x0a, 0x54,
	0x87, 0x32, 0x0d, 0x47, 0x24, 0xa2, 0x6a, 0x34, 0x1e, 0xe0, 0x54, 0xb4, 0x6f, 0x00, 0x6e, 0x98,
	0x7f, 0x4b, 0xe2, 0xd8, 0xf1, 0x89, 0x20, 0x17, 0x8b, 0xa8, 0x4f, 0xc3, 0x94, 0x5c, 0x4a, 0x92,
	0x17, 0x45, 0xa6, 0x44, 0xd1, 0xeb, 0x08, 0x2b, 0x41, 0xbc, 0xc5, 0x38, 0xf6, 0x75, 0x3f, 0xe2,
	0xd8, 0xfa, 0xfb, 0x00, 0xf2, 0xed, 0x7e, 0x0f, 0x7d, 0x09, 0x55, 0x39, 0x79, 0x3a, 0x11, 0x71,
	0x38, 0x41, 0x4b, 0xd3, 0xa8, 0xb1, 0x24, 0xd9, 0x06, 0xba, 0x80, 0x8a, 0x1a, 0x53, 0xc4, 0xf1,
	0xf6, 0xb8, 0xbe, 0x86, 0xc3, 0xb9, 0xeb, 0x55, 0xec, 0xee, 0xf1, 0x4e, 0xab, 0x18, 0x4e, 0xbc,
	0xfd, 0x55, 0x34, 0xa1, 0x96, 0x71, 0xfe, 0x78, 0xf0, 0x2b, 0x12, 0x90, 0xbd, 0xe0, 0x6f, 0x32,
	0x75, 0xb7, 0x83, 0x00, 0x9d, 0xac, 0x4d, 0x3b, 0xb9, 0x04, 0x1b, 0x9f, 0x65, 0xe3, 0xe4, 0x68,
	0xb7, 0x0d, 0xf4, 0x13, 0x3c, 0xc9, 0x06, 0x8b, 0xd2, 0x3e, 0x29, 0xfe, 0x2d, 0x20, 0x2d, 0x2f,
	0xa8, 0x1f, 0x6f, 0x85, 0x58, 0x2d, 0x7d, 0x35, 0x5a, 0x10, 0xf1, 0xe3, 0xa3, 0xbf, 0x83, 0x13,
	0x79, 0x14, 0x39, 0x97, 0xf3, 0xef, 0xbe, 0xb0, 0x4d, 0x71, 0x2a, 0xf3, 0xee, 0xb8, 0x6f, 0xe1,
	0xd9, 0x5a, 0x9c, 0x9c, 0x1b, 0xbb, 0xc3, 0x7e, 0xd4, 0x8f, 0xaf, 0x1e, 0xf3, 0x93, 0x5f, 0xa8,
	0x03, 0xd5, 0xcc, 0x5a, 0x45, 0xa7, 0xcb, 0x3b, 0x30, 0xb3, 0x6a, 0x1b, 0xcf, 0x36, 0xae, 0x47,
	0xdb, 0xf8, 0xca, 0x44, 0xdd, 0xc5, 0x40, 0xd9, 0x87, 0x72, 0xb2, 0x79, 0x33, 0x49, 0x98, 0xf7,
	0x70, 0x34, 0xdf, 0x18, 0x12, 0x27, 0x4d, 0xb9, 0xbc, 0x47, 0x1a, 0x5b, 0x1a, 0xb4, 0x8d, 0x73,
	0x13, 0xbd, 0x91, 0x43, 0xc1, 0x27, 0x91, 0x04, 0x48, 0x5b, 0x5e, 0xcc, 0x89, 0x5d, 0xc1, 0x0f,
	0x25, 0xa9, 0xfb, 0xfa, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x91, 0x01, 0x1e, 0x21, 0x0a,
	0x00, 0x00,
}
