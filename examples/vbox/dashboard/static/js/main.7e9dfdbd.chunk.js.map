{"version":3,"sources":["components/Common.js","components/Dashboard.js","components/NodeView.js","components/App.js","index.js"],"names":["GLOBAL_COLORS","yellow","red","grey","purple","green","blue","black","KRAKEN_IP","stateToColor","state","base64toHEX","base64","raw","atob","HEX","i","length","_hex","charCodeAt","toString","toUpperCase","base64ToIP","DEC","_dec","base64ToUuid","str","result","replace","fetchNodeListFromUrl","url","fetch","then","data","json","nodes","catch","error","putNode","headers","Content-Type","method","body","JSON","stringify","res","response","console","log","Header","react_default","a","createElement","className","href","Cluster","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dsc_url","concat","Common","cfg_url","refreshRate","unknown_count","init_count","sync_count","dsc_loaded","_this2","interval","window","setInterval","nodeInfoUpdate","initialNodeFetch","_this3","setState","loading","disconnected","sort","b","nodename","aMatch","match","bMatch","aCluster","parseInt","aNode","bCluster","bNode","localeCompare","_this4","unknownCount","initCount","syncCount","j","id","physState","runState","Fragment","style","textAlign","fontFamily","color","map","node","Node","key","Component","physColor","runColor","uuid","popupData","Link","data-popup","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","to","Legend","borderColor","Dashboard","Dashboard_Cluster","Square","dscNode","NodeInfo","runStateCfg","cfgNode","parentId","parentUuid","arch","platform","NetworkInfo","extensions","ethernet","networkInterface","ifaces","eth","iface","mac","ip","subnet","Actions","onClick","dscUrl","cfgUrl","NodeView","params","dot_url","dotString","nodeInfoFetch","textFetch","inputNode","warn","_this5","text","NodeView_Header","keys","App","BrowserRouter","Route","exact","path","component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7e9dfdbd.chunk.js","sourcesContent":["export var GLOBAL_COLORS = {\n    yellow: \"#f2cf66\",\n    red: \"#e74c3c\",\n    grey: \"#a5a5a5\",\n    purple: \"#6a51ba\",\n    green: \"#89CA78\",\n    blue: \"#509EE8\",\n    black: \"#000000\",\n}\n\n// export var KRAKEN_IP = '127.0.0.1:3141'\nexport var KRAKEN_IP = '192.168.57.10:3141'\n\n\nexport function stateToColor(state) {\n    if (state === \"PHYS_ERROR\" | state === \"ERROR\" | state === \"POWER_CYCLE\") {\n        return GLOBAL_COLORS.red\n    } else if (state === \"PHYS_HANG\") {\n        return GLOBAL_COLORS.purple\n    } else if (state === \"POWER_OFF\") {\n        return GLOBAL_COLORS.grey\n    } else if (state === \"PHYS_UNKNOWN\" | state === \"UNKNOWN\") {\n        return GLOBAL_COLORS.yellow\n    } else if (state === \"INIT\") {\n        return GLOBAL_COLORS.blue\n    } else if (state === \"SYNC\" | state === \"POWER_ON\") {\n        return GLOBAL_COLORS.green\n    }\n    else {\n        return GLOBAL_COLORS.yellow\n    }\n}\n\nexport function base64toHEX(base64) {\n    var raw = atob(base64)\n    var HEX = ''\n    for (var i = 0; i < raw.length; i++) {\n        var _hex = raw.charCodeAt(i).toString(16)\n        HEX += (_hex.length === 2 ? _hex : '0' + _hex)\n    }\n    return HEX.toUpperCase()\n}\n\nexport function base64ToIP(base64) {\n    var raw = atob(base64)\n    var DEC = ''\n    for (var i = 0; i < raw.length; i++) {\n        var _dec = raw.charCodeAt(i).toString(10)\n        DEC += (i === 0 ? _dec : '.' + _dec)\n    }\n    return DEC\n}\n\nexport function base64ToUuid(str) {\n    var result = base64toHEX(str)\n    result = result.replace(/(.{8})(.{4})(.{4})(.{4})(.{10})/, \"$1-$2-$3-$4-$5\")\n    return result\n}\n\nexport function base64ToMac(str) {\n    var result = base64toHEX(str)\n    result = result.replace(/(.{2})(.{2})(.{2})(.{2})(.{2})(.{2})/, \"$1:$2:$3:$4:$5:$6\")\n    return result\n}\n\nexport function fetchNodeListFromUrl(url) {\n    return fetch(url)\n        .then((data) => data.json())\n        .then((nodes) => nodes.nodes)\n        .catch((error) => {\n            // console.warn(error)\n            return null\n        })\n}\n\nexport function fetchNodeFromUrl(url) {\n    return fetch(url)\n        .then((data) => data.json())\n        .catch((error) => {\n            console.warn(error)\n            return null\n        })\n}\n\nexport function fetchTextFromUrl(url) {\n    return fetch(url)\n        .then((data) => data.text())\n        .catch((error) => {\n            console.warn(error)\n            return null\n        })\n}\n\nexport function putNode(url, data) {\n    // console.log(url)\n    // console.log(data)\n    return fetch(url, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'PUT',\n        body: JSON.stringify(data),\n    }\n\n    ).then(res => res.json())\n        .then(response => console.log('Success:', JSON.stringify(response)))\n        .catch(error => console.error('Error:', error));\n}\n\nexport function copyToClipboard(text) {\n    var dummy = document.createElement(\"input\");\n    document.body.appendChild(dummy);\n    dummy.setAttribute('value', text);\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n    console.log(\"Copied:\", text)\n}\n\nexport function rebootNode(dscNode, cfgNode, dscUrl, cfgUrl) {\n    /*\n    cfgNode.runState = \"SYNC\"\n    cfgNode.physState = \"POWER_ON\"\n\n    for (var i = 0; i < cfgNode.extensions.length; i++) {\n        if (cfgNode.extensions[i]['@type'] === \"type.googleapis.com/proto.PXE\") {\n            // console.log(data.extensions[i])\n            cfgNode.extensions[i]['state'] = \"COMP\"\n        }\n    }\n    */\n\n    dscNode.runState = \"UNKNOWN\"\n    dscNode.physState = \"PHYS_HANG\"\n\n    for (var i = 0; i < dscNode.extensions.length; i++) {\n        if (dscNode.extensions[i]['@type'] === \"type.googleapis.com/proto.PXE\") {\n            // console.log(data.extensions[i])\n            dscNode.extensions[i]['state'] = \"NONE\"\n        }\n    }\n\n\n    // console.log(data)\n    putNode(dscUrl, dscNode)\n    //putNode(cfgUrl, cfgNode)\n}\n\nexport function powerOffNode(dscNode, cfgNode, dscUrl, cfgUrl) {\n    cfgNode.physState = \"POWER_OFF\"\n    cfgNode.runState = \"UNKNOWN\"\n    for (var i = 0; i < cfgNode.extensions.length; i++) {\n        if (cfgNode.extensions[i]['@type'] === \"type.googleapis.com/proto.PXE\") {\n            // console.log(data.extensions[i])\n            cfgNode.extensions[i]['state'] = \"NONE\"\n        }\n    }\n\n    dscNode.runState = \"UNKNOWN\"\n    dscNode.physState = \"PHYS_HANG\"\n    for (var i = 0; i < dscNode.extensions.length; i++) {\n        if (dscNode.extensions[i]['@type'] === \"type.googleapis.com/proto.PXE\") {\n            // console.log(data.extensions[i])\n            dscNode.extensions[i]['state'] = \"NONE\"\n        }\n    }\n\n    putNode(dscUrl, dscNode)\n    putNode(cfgUrl, cfgNode)\n}\n\nexport function powerOnNode(dscNode, cfgNode, dscUrl, cfgUrl) {\n    cfgNode.runState = \"SYNC\"\n    cfgNode.physState = \"POWER_ON\"\n    for (var i = 0; i < cfgNode.extensions.length; i++) {\n        if (cfgNode.extensions[i]['@type'] === \"type.googleapis.com/proto.PXE\") {\n            // console.log(data.extensions[i])\n            cfgNode.extensions[i]['state'] = \"INIT\"\n        }\n    }\n    putNode(cfgUrl, cfgNode)\n}","import React, { Component } from 'react'\nimport * as Common from './Common'\nimport {\n    Link,\n} from 'react-router-dom'\n\n\nfunction Header() {\n    return (\n        <a className=\"title-link\" href=\"/\">\n        <h1 className=\"banner__title\">Kraken</h1>\n        </a>\n    )\n}\n\nclass Cluster extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dsc_url: `http://${Common.KRAKEN_IP}/dsc/nodes`,\n            cfg_url: `http://${Common.KRAKEN_IP}/cfg/nodes`,\n            refreshRate: 300,\n            nodes: [],\n            unknown_count: 0,\n            init_count: 0,\n            sync_count: 0,\n            dsc_loaded: false,\n            // loading: true\n        }\n    }\n\n    componentDidMount() {\n        this.interval = window.setInterval(() => {\n            this.nodeInfoUpdate(this.state.dsc_url)\n        }, this.state.refreshRate)\n        this.initialNodeFetch(this.state.cfg_url)\n        this.nodeInfoUpdate(this.state.dsc_url)\n    }\n\n    initialNodeFetch(url) {\n        this.setState({\n            loading: true\n        })\n\n        Common.fetchNodeListFromUrl(url)\n            .then((nodes) => {\n                if (nodes === null) {\n                    this.setState({\n                        disconnected: true\n                    })\n                }\n                else {\n                    nodes.sort(function (a, b) {\n                        if (typeof a.nodename === 'undefined' && typeof b.nodename === 'undefined') {\n                            return 0\n                        }\n                        else if (typeof a.nodename === 'undefined') {\n                            return -1\n                        }\n                        else if (typeof b.nodename === 'undefined') {\n                            return 1\n                        }\n                        else {\n                            var aMatch = a.nodename.match(/(\\d*)/g)\n                            var bMatch = b.nodename.match(/(\\d*)/g)\n\n                            var aCluster = parseInt(aMatch[1])\n                            var aNode = parseInt(aMatch[3])\n                            var bCluster = parseInt(bMatch[1])\n                            var bNode = parseInt(bMatch[3])\n\n                            if (aCluster > bCluster) {\n                                console.log(\"\")\n                                return 1\n                            } else if (aCluster < bCluster) {\n                                return -1\n                            }\n\n                            if (aNode > bNode) {\n                                return 1\n                            } else if (aNode < bNode) {\n                                return -1\n                            } \n\n\n                            // console.log(parseInt(aMatch[1]))\n                            return a.nodename.localeCompare(b.nodename)\n                        }\n                    })\n                    // console.log(nodes)\n                    this.setState({\n                        loading: false,\n                        disconnected: false,\n                        nodes,\n                    })\n                }\n            })\n    }\n\n    nodeInfoUpdate(url){\n        this.setState({\n            loading: true\n        })\n\n        Common.fetchNodeListFromUrl(url)\n        .then((nodes) => {\n            if (nodes === null) {\n                this.setState({\n                    disconnected: true\n                })\n            }\n            else {\n                if (this.state.nodes.length !== nodes.length){\n                    this.initialNodeFetch(this.state.cfg_url)\n                }\n\n                var unknownCount = 0\n                var initCount = 0\n                var syncCount = 0\n\n                for (var i=0; i<nodes.length; i++){\n                    for (var j=0; j<this.state.nodes.length; j++){\n                        if (this.state.nodes[j].id === nodes[i].id){\n                            this.state.nodes[j].physState = nodes[i].physState\n                            this.state.nodes[j].runState = nodes[i].runState\n\n                            switch(this.state.nodes[j].runState) {\n                                case \"UNKNOWN\":\n                                    unknownCount++\n                                    break\n                                case \"INIT\":\n                                    initCount++\n                                    break\n                                case \"SYNC\":\n                                    syncCount++\n                                    break\n                                default:\n                                    unknownCount++\n                                    break\n                            }\n\n\n                        }\n                    }\n                }\n                // console.log(nodes)\n                this.setState({\n                    loading: false,\n                    disconnected: false,\n                    unknown_count: unknownCount,\n                    init_count: initCount,\n                    sync_count: syncCount,\n                    dsc_loaded: true,\n                })\n            }\n        })\n    }\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.disconnected &&\n                    <h2\n                        style={{ textAlign: 'center', fontFamily: 'Arial', color: 'maroon' }}\n                    >Disconnected From Kraken</h2>\n                }\n                {(typeof this.state.nodes[0] === 'undefined' || this.state.dsc_loaded === false)\n                    ? <h3\n                        style={{ fontFamily: 'Arial' }}    \n                    >Loading...</h3>\n                    : <div className='cluster'>\n                        {this.state.nodes.map((node) => {\n                            return <Node data={node} key={node.id} />\n                        })}\n                    </div>\n                }\n                <div className='counts'>Unknown: {this.state.unknown_count}</div>\n                <div className='counts'>Init: {this.state.init_count}</div>\n                <div className='counts'>Sync: {this.state.sync_count}</div>\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nfunction Node(props) {\n    // console.log(props)\n    if (typeof props.data.physState === 'undefined') {\n        props.data.physState = 'UNKNOWN'\n    }\n    if (typeof props.data.runState === 'undefined') {\n        props.data.runState = 'UNKNOWN'\n    }\n\n    var physColor = Common.stateToColor(props.data.physState)\n    var runColor = Common.stateToColor(props.data.runState)\n    var uuid = Common.base64ToUuid(props.data.id)\n\n    var popupData = `Name: ${props.data.nodename}\\nUUID: ${uuid}\\nPhysical State: ${props.data.physState}\\nRun State: ${props.data.runState}`\n\n    return (\n        <Link\n            data-popup={popupData}\n            className={`square shadow animate compute`}\n            style={{borderTopColor: physColor, borderRightColor: runColor, borderBottomColor: runColor, borderLeftColor: physColor}}\n            // onClick={() => {resetState(uuid)}}\n            to={`node/${uuid}`}\n        />\n    )\n}\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n                <div className='main-body'>\n                <Legend />\n                <div className='node-area'>\n                    <Cluster />\n                </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction Legend(){\n    return(\n        <div className='legend'>\n            <div className='legend_title'>Legend</div>\n            <div className='row' id='first_row'>\n                <div className='value' id='phys_text'>Phys</div>\n                <div \n                    className={`square`}\n                    style={{borderTopColor: Common.GLOBAL_COLORS.grey, borderRightColor: Common.GLOBAL_COLORS.black, borderBottomColor: Common.GLOBAL_COLORS.black, borderLeftColor: Common.GLOBAL_COLORS.grey}}\n                ></div>\n                <div className='value' id='run_text'>Run</div>\n            </div>\n            <div className='row'>\n                <div \n                    className={`square`}\n                    style={{ borderColor:Common.GLOBAL_COLORS.yellow }}\n                ></div>\n                <div className='value'>State Unknown</div>\n            </div>\n            <div className='row'>\n                <div \n                    className={`square`}\n                    style={{ borderColor:Common.GLOBAL_COLORS.grey }}\n                ></div>\n                <div className='value'>Power Off</div>\n            </div>\n            <div className='row'>\n                <div \n                    className={`square`}\n                    style={{ borderColor:Common.GLOBAL_COLORS.blue }}\n                ></div>\n                <div className='value'>Initializing</div>\n            </div>\n            <div className='row'>\n                <div \n                    className={`square`}\n                    style={{ borderColor:Common.GLOBAL_COLORS.green }}\n                ></div>\n                <div className='value'>Power On / Sync</div>\n            </div>\n            <div className='row'>\n                <div \n                    className={`square`}\n                    style={{ borderColor:Common.GLOBAL_COLORS.purple }}\n                ></div>\n                <div className='value'>Hang</div>\n            </div>\n            <div className='row'>\n                <div \n                    className={`square`}\n                    style={{ borderColor:Common.GLOBAL_COLORS.red }}\n                ></div>\n                <div className='value'>Error</div>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Dashboard\n","import React, { Component, createRef } from 'react'\nimport vis from 'vis'\nimport * as Common from './Common'\n\nfunction Header() {\n    return (\n        <a className=\"title-link\" href=\"/\"><h1 className=\"banner__title\">Kraken</h1></a>\n    )\n}\n\nfunction Square(props) {\n    var physColor = Common.stateToColor(props.dscNode.physState)\n    var runColor = Common.stateToColor(props.dscNode.runState)\n    return (\n        <div\n            className={`large_square`}\n            style={{ borderTopColor: physColor, borderRightColor: runColor, borderBottomColor: runColor, borderLeftColor: physColor }}\n        ></div>\n    )\n}\n\n\nfunction NodeInfo(props) {\n    var runState\n    var runStateCfg\n    if (typeof props.dscNode.runState === 'undefined') {\n        runState = \"UNKNOWN\"\n    } else {\n        runState = props.dscNode.runState\n    }\n    if (typeof props.cfgNode.runState === 'undefined') {\n        runStateCfg = \"UNKNOWN\"\n    } else {\n        runStateCfg = props.cfgNode.runState\n    }\n    console.log(\"props\", props)\n    console.log(\"node id\", props.cfgNode.id)\n    if (props.cfgNode.id !== null && typeof props.cfgNode.id !== 'undefined') {\n        var uuid = Common.base64ToUuid(props.cfgNode.id)\n    } else {\n        var uuid = \"\"\n    }\n    if (props.cfgNode.parentId !== null && typeof props.cfgNode.parentId !== 'undefined') {\n        var parentUuid = Common.base64ToUuid(props.cfgNode.parentId)\n    } else {\n        var parentUuid = \"\"\n    }\n    return (\n        <div className={`node_detail`}>\n            <h1 className={`node_title`}>{props.cfgNode.nodename}</h1>\n            <div className={`non_bordered_detail`}>\n                <div className={`node_view_row`}>\n                    <div className={`node_view_key`}>Node ID:</div>\n                    <div className={`node_view_value`}>{uuid}</div>\n                </div>\n                <div className={`node_view_row`}>\n                    <div className={`node_view_key`}>Parent ID:</div>\n                    <div className={`node_view_value`}>{parentUuid}</div>\n                </div>\n                <div className={`node_view_row`}>\n                    <div className={`node_view_key`}>Physical State:</div>\n                    <div className={`node_view_value`}>{props.dscNode.physState} / {props.cfgNode.physState}</div>\n                </div>\n                <div className={`node_view_row`}>\n                    <div className={`node_view_key`}>Run State:</div>\n                    <div className={`node_view_value`}>{runState} / {runStateCfg}</div>\n                </div>\n                <div className={`node_view_row`}>\n                    <div className={`node_view_key`}>Architecture:</div>\n                    <div className={`node_view_value`}>{props.cfgNode.arch}</div>\n                </div>\n                <div className={`node_view_row`}>\n                    <div className={`node_view_key`}>Platform:</div>\n                    <div className={`node_view_value`}>{props.cfgNode.platform}</div>\n                </div>\n            </div>\n            <NetworkInfo cfgNode={props.cfgNode} />\n        </div>\n    )\n}\n\nfunction NetworkInfo(props) {\n    if (props.cfgNode.extensions !== null && typeof props.cfgNode.extensions !== 'undefined') {\n        for (var i = 0; i < props.cfgNode.extensions.length; i++) {\n            // if (props.cfgNode.extensions[i]['@type'] === \"type.googleapis.com/proto.RPi3\"){\n            if (props.cfgNode.extensions[i]['@type'] === \"type.googleapis.com/proto.IPv4OverEthernet\") {\n                var ethernet = props.cfgNode.extensions[i]\n            }\n        }\n    }\n    if (ethernet !== null && typeof ethernet !== 'undefined') {\n        var networkInterface = ethernet.ifaces[0].eth.iface\n        var mac = Common.base64ToMac(ethernet.ifaces[0].eth.mac)\n        var ip = Common.base64ToIP(ethernet.ifaces[0].ip.ip)\n        var subnet = Common.base64ToIP(ethernet.ifaces[0].ip.subnet)\n    } else {\n        var networkInterface = \"\"\n        var mac = \"\"\n        var ip = \"\"\n        var subnet = \"\"\n    }\n    return (\n        <div className={`bordered_detail`}>\n            <div className={`info_title`}>Network</div>\n            <div className={`node_view_row`}>\n                <div className={`node_view_key`}>Interface:</div>\n                <div className={`node_view_value`}>{networkInterface}</div>\n            </div>\n            <div className={`node_view_row`}>\n                <div className={`node_view_key`}>Mac Address:</div>\n                <div className={`node_view_value`}>{mac}</div>\n            </div>\n            <div className={`node_view_row`}>\n                <div className={`node_view_key`}>IP Address:</div>\n                <div className={`node_view_value`}>{ip}</div>\n            </div>\n            <div className={`node_view_row`}>\n                <div className={`node_view_key`}>Subnet Mask:</div>\n                <div className={`node_view_value`}>{subnet}</div>\n            </div>\n        </div>\n    )\n}\n\nfunction ServicesInfo() {\n    return (\n        <div className={`bordered_detail`}>\n            <div className={`info_title`}>Serivces</div>\n            <div className={`node_view_row`}>\n                <div className={`node_view_key`}>Service:</div>\n                <div className={`node_view_value`}>blah</div>\n                <div className={`node_view_key`}>STATUS</div>\n            </div>\n        </div>\n    )\n}\n\nfunction LocationInfo(props) {\n    for (var i = 0; i < props.cfgNode.extensions.length; i++) {\n        if (props.cfgNode.extensions[i]['@type'] === \"type.googleapis.com/proto.RPi3\") {\n            var location = props.cfgNode.extensions[i]\n        }\n    }\n\n    return (\n        <div className={`bordered_detail`}>\n            <div className={`info_title`}>Location</div>\n            <div className={`node_view_row`}>\n                <div className={`node_view_key`}>Chassis:</div>\n                <div className={`node_view_value`}>{location.chassis}</div>\n            </div>\n            <div className={`node_view_row`}>\n                <div className={`node_view_key`}>Rank:</div>\n                <div className={`node_view_value`}>{location.rank}</div>\n            </div>\n        </div>\n    )\n}\n\n\nfunction Actions(props) {\n    return (\n        <div className={`actions_area`}>\n            <div\n                className={`button red`}\n                onClick={() => { Common.powerOnNode(props.dscNode, props.cfgNode, props.dscUrl, props.cfgUrl) }}\n            >Power On</div>\n            <div\n                className={`button red`}\n                onClick={() => { Common.powerOffNode(props.dscNode, props.cfgNode, props.dscUrl, props.cfgUrl) }}\n            >Power Off</div>\n        </div>\n    )\n}\n\nclass NodeGraph extends Component {\n    constructor(props) {\n        super(props);\n        this.appRef = createRef();\n\n        var parsedData = vis.network.convertDot(props.dotString)\n        var data = {\n            nodes: parsedData.nodes,\n            edges: parsedData.edges,\n        }\n        var options = parsedData.options\n        options.width = \"100%\"\n        options.height = \"100%\"\n\n        this.state = {\n            data: data,\n            options: options,\n        }\n    }\n\n    componentDidMount() {\n        var network = new vis.Network(this.appRef.current, this.state.data, this.state.options);\n        network.fit(this.state.options)\n    }\n\n    render() {\n        return (\n            <div \n            className={`node_graph`}\n            ref={this.appRef} />\n        )\n    }\n\n}\n\n\nclass NodeView extends Component {\n    constructor(props) {\n        super(props)\n\n        // console.log(props)\n\n        this.state = {\n            dsc_url: `http://${Common.KRAKEN_IP}/dsc/node/${props.match.params.uuid}`,\n            cfg_url: `http://${Common.KRAKEN_IP}/cfg/node/${props.match.params.uuid}`,\n            dot_url: `http://${Common.KRAKEN_IP}/graph/node/${props.match.params.uuid}/dot`,\n            refreshRate: 1000,\n            dscNode: {},\n            cfgNode: {},\n            dotString: '',\n            disconnected: true,\n        }\n        // console.log(this.state)\n    }\n\n    componentDidMount() {\n        this.interval = window.setInterval(() => {\n            this.nodeInfoFetch(this.state.dsc_url, 'dsc')\n        }, this.state.refreshRate)\n        this.nodeInfoFetch(this.state.cfg_url, 'cfg')\n        this.textFetch(this.state.dot_url)\n        this.nodeInfoFetch(this.state.dsc_url, 'dsc')\n    }\n\n    nodeInfoFetch(url, inputNode) {\n        this.setState({\n            loading: true\n        })\n\n        Common.fetchNodeFromUrl(url)\n            .then((node) => {\n                if (node === null) {\n                    this.setState({\n                        disconnected: true\n                    })\n                }\n                // console.log(node)\n                if (inputNode === 'dsc') {\n                    this.setState({\n                        loading: false,\n                        disconnected: false,\n                        dscNode: node,\n                    })\n                } else if (inputNode === 'cfg') {\n                    this.setState({\n                        loading: false,\n                        disconnected: false,\n                        cfgNode: node,\n                    })\n                } else if (inputNode === 'dot') {\n                    console.log(\"response: \", node)\n                    this.setState({\n                        loading: false,\n                        disconnected: false,\n                        dotString: node,\n                    })\n                }\n            })\n    }\n\n    textFetch(url) {\n        this.setState({\n            loading: true\n        })\n\n        Common.fetchTextFromUrl(url)\n            .then((data) => {\n                console.log(\"response: \", data)\n                this.setState({\n                    dotString: data,\n                })\n            })\n    }\n\n    render() {\n        console.log(\"dsc:\", this.state.dscNode)\n        console.log(\"cfg:\", this.state.cfgNode)\n        // console.log(\"dot string:\",this.state.dotString)\n        return (\n            <React.Fragment>\n                <Header />\n                {this.state.disconnected || Object.keys(this.state.dscNode).length === 0\n                    ? <h3\n                        style={{ fontFamily: 'Arial' }}\n                    >Loading...</h3>\n                    : <div>\n                        <div>\n                            <Square dscNode={this.state.dscNode} cfgNode={this.state.cfgNode} />\n                            <NodeInfo dscNode={this.state.dscNode} cfgNode={this.state.cfgNode} />\n                            <Actions dscNode={this.state.dscNode} cfgNode={this.state.cfgNode} dscUrl={this.state.dsc_url} cfgUrl={this.state.cfg_url} />\n                        </div>\n                    </div>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default NodeView","import React, { Component } from 'react'\nimport Dashboard from './Dashboard'\nimport NodeView from './NodeView'\nimport {\n    BrowserRouter,\n    Route,\n} from 'react-router-dom'\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <React.Fragment>\n                    <Route exact path='/' component={Dashboard} />\n                    <Route path='/node/:uuid' component={NodeView} />\n                </React.Fragment>\n\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n//import NodeView from './components/NodeView'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}