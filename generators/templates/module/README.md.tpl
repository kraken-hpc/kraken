# This module was generated by kraken version {{ .Global.Version }}

## What was generated?

We generated these files:

- `{{ .Name }}.mod.go` - This file shouldn't be directly modified.  Use `kraken module update` instead.
- `{{ .Name }}.go` - This file is basic starting-point file to build on.  If you run `kraken module update` it *won't* be modified, but `kraken -f module generate` will overwrite it.
- `{{ .Name }}.config.proto`  - This is your basis protobuf config.  You'll need to generate code from this when it's got the values you need (wiht `go generate`). If you run `kraken module update` it *won't* be modified, but `kraken -f module generate` will overwrite it.

It might be a good idea to use `{{ .Name }}.go`  only to link larger functions in some other source file.  This will make it easier for major upgrades when you may need to run `kraken module generate` again.

## What to do now

1. You need to generate your protobuf code (if you selected `with_config: true` (default)).  This will require `protoc` and `gogo-protobuf`.  You can then run `go generate` in this directory to produce `{{ .Name }}.config.pb.go`.
2. At this point the module is runnable if you build it into an app, and it will generate graphs, though it won't *do* anything.  This is a good point to make sure your graphs make sense.
3. In `{{ .Name }}.go` insude of `func Init()` you need to add real functions for mutation handlers.  The default handler is just one that prints a "not implemented" message.
4. You can also add custom code to places like `func Entry()` to change startup behavior, or to `func Poll()` to use your polling loop (if you chose to create one). Look for comments starting with `// TODO:` for suggestions of where you might want to edit this file.
